# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch and push events for the develop branch.
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  JAVA_VERSION: "11.x"
  FLUTTER_VERSION: "2.10.5"
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-android:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '11.x'

    - uses: subosito/flutter-action@v1
      with:
        channel: ${{env.FLUTTER_CHANNEL}}
        flutter-version: ${{env.FLUTTER_VERSION}}
  
    # Creating the key.properties file
    - run: |
        echo keyPassword=\${{ secrets.SIGNING_KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
        echo storePassword=\${{ secrets.SIGNING_STORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
        echo keyAlias=\${{ secrets.SIGNING_KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}

    # Decoding base64 key into a file
    - run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/key.jks

    # Get dependencies and make assigned appbundle
    - run: | 
        flutter pub get
        flutter build appbundle

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Build Artifacts
        path: app/build/outputs/bundle/release
    
  build-ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '2.10.4'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
    - run: flutter build ios --release --no-codesign
